[{"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\index.js":"1","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\App.js":"2","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\reportWebVitals.js":"3","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\CreateAccount.jsx":"4","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\login-account\\LogInAccount.jsx":"5","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\HomePageHeader.jsx":"6"},{"size":547,"mtime":1609371954266,"results":"7","hashOfConfig":"8"},{"size":681,"mtime":1609532208450,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2769,"mtime":1609383977693,"results":"11","hashOfConfig":"8"},{"size":2734,"mtime":1609445993366,"results":"12","hashOfConfig":"8"},{"size":5392,"mtime":1609532289556,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"5lsdsn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\index.js",[],["29","30"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\App.js",["31"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\reportWebVitals.js",[],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\CreateAccount.jsx",["32"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nclass CreateAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);  //Not Object File type\r\n        if (data.get('password') == data.get('verifyPassword')) {\r\n            const data2 = {\r\n                firstName: data.get('firstName'),\r\n                lastName: data.get('lastName'),\r\n                email: data.get('email'),\r\n                password: data.get('password')\r\n            }\r\n            //const value = Object.fromEntries(data2.entries());  //converts form file type into Object\r\n            await fetch('/api/users', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                    'Content-Type': 'application/json'  //sending data in JSON format\r\n                },\r\n                body: JSON.stringify(data2)\r\n            });\r\n        }\r\n        else {\r\n            alert(\"passwords do not match\");\r\n        }\r\n        this.props.history.push('/home');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <h2>Create Account</h2>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"fName\">First Name</Label>\r\n                        <Input type=\"text\" name=\"firstName\" id=\"fName\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"lName\">Last Name</Label>\r\n                        <Input type=\"text\" name=\"lastName\" id=\"lName\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"email\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\">Password</Label>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"verifyPassword\">Verify Password</Label>\r\n                        <Input type=\"password\" name=\"verifyPassword\" id=\"verifyPassword\" />\r\n                    </FormGroup>\r\n                    <Button color=\"primary\" type=\"submit\">Sign Up</Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateAccount);","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\login-account\\LogInAccount.jsx",["33","34"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, Card } from 'reactstrap';\r\nimport classNames from 'classnames/bind';\r\nimport styles from'./LogInAccount.css';\r\nconst cx = classNames.bind(styles);\r\n\r\nclass LogInAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {isSignInSuccessful: false};\r\n    }\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const response = await fetch('/api/verifyUser?email=' + data.get('email') + '&password=' + data.get('password'), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const body = await response.json();\r\n        this.setState({isSignInSuccessful: body});\r\n        if (this.state.isSignInSuccessful) {\r\n            const updateSignIn = await fetch('/api/userIsSignedIn?email=' + data.get('email') + '&signIn=true', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                    'Content-Type': 'application/json'  //sending data in JSON format\r\n                }\r\n            });\r\n            this.props.history.push('/home');\r\n        } else {\r\n            alert(\"Sign in credentials did not match, please try again.\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container className=\"page-hero d-flex align-items-center justify-content-center\">\r\n                <div className={cx('logInbackground')}>\r\n                    <h2>Welcome Back!</h2>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" />\r\n                        </FormGroup>\r\n                        <div style={{textAlign: \"center\"}}>\r\n                            <Button color=\"light\" type=\"submit\">Sign In</Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LogInAccount);","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\HomePageHeader.jsx",["35","36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":14,"column":34,"nodeType":"48","messageId":"49","endLine":14,"endColumn":36},{"ruleId":"42","severity":1,"message":"50","line":3,"column":60,"nodeType":"44","messageId":"45","endLine":3,"endColumn":64},{"ruleId":"42","severity":1,"message":"51","line":27,"column":19,"nodeType":"44","messageId":"45","endLine":27,"endColumn":31},{"ruleId":"42","severity":1,"message":"50","line":3,"column":60,"nodeType":"44","messageId":"45","endLine":3,"endColumn":64},{"ruleId":"42","severity":1,"message":"52","line":3,"column":72,"nodeType":"44","messageId":"45","endLine":3,"endColumn":82},{"ruleId":"42","severity":1,"message":"53","line":58,"column":15,"nodeType":"44","messageId":"45","endLine":58,"endColumn":19},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'CreateAccount' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'updateSignIn' is assigned a value but never used.","'InputGroup' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
