[{"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\index.js":"1","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\reportWebVitals.js":"2","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\App.js":"3","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\MainPage.jsx":"4","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\login-page\\LoginPage.jsx":"5","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\left-panel\\LeftPanel.jsx":"6","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\HomePage.jsx":"7","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\CreateAccount.jsx":"8","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\login-account\\LogInAccount.jsx":"9","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\left-panel\\AddSubject.jsx":"10","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\subject-list\\SubjectList.jsx":"11","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\home-page-header\\HomePageHeader.jsx":"12","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\home-page-assessments\\HomePageAssessments.jsx":"13","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\assessment-block\\AssessmentBlock.jsx":"14","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\subject\\Subject.jsx":"15"},{"size":547,"mtime":1609539013829,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":903,"mtime":1610232019215,"results":"19","hashOfConfig":"17"},{"size":651,"mtime":1610212004499,"results":"20","hashOfConfig":"17"},{"size":1366,"mtime":1610212004505,"results":"21","hashOfConfig":"17"},{"size":2508,"mtime":1610236604433,"results":"22","hashOfConfig":"17"},{"size":2801,"mtime":1610243261374,"results":"23","hashOfConfig":"17"},{"size":3140,"mtime":1610212518172,"results":"24","hashOfConfig":"17"},{"size":3248,"mtime":1610212518181,"results":"25","hashOfConfig":"17"},{"size":3483,"mtime":1610237583071,"results":"26","hashOfConfig":"17"},{"size":595,"mtime":1610234206186,"results":"27","hashOfConfig":"17"},{"size":7718,"mtime":1610243198133,"results":"28","hashOfConfig":"17"},{"size":10342,"mtime":1610236043339,"results":"29","hashOfConfig":"17"},{"size":3139,"mtime":1610232019289,"results":"30","hashOfConfig":"17"},{"size":836,"mtime":1610235149807,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5lsdsn",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\index.js",[],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\reportWebVitals.js",[],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\App.js",[],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\MainPage.jsx",["65","66"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\login-page\\LoginPage.jsx",["67","68","69"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\left-panel\\LeftPanel.jsx",[],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\HomePage.jsx",["70"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\CreateAccount.jsx",["71"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\login-account\\LogInAccount.jsx",["72","73"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\left-panel\\AddSubject.jsx",[],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\subject-list\\SubjectList.jsx",["74"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\home-page-header\\HomePageHeader.jsx",["75","76","77","78","79","80","81","82","83","84"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\home-page-assessments\\HomePageAssessments.jsx",["85","86","87","88","89","90","91"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\nimport { Container, Row, Button, Card, CardBody, CardFooter, CardHeader, Modal, ModalBody, ModalHeader, ModalFooter, Form, FormGroup, Label, Input, Collapse } from 'reactstrap';\r\nimport AssessmentBlock from '../assessment-block/AssessmentBlock';\r\n\r\nclass HomePageAssessments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            assessmentToggle: false,\r\n            completeAssessments: false,\r\n            cookie: this.props.cookies,\r\n            subjects: [],\r\n            assessmentTypes: [],\r\n            assessmentObjectArray: [],\r\n            completeAssessmentObjectArray: [],\r\n            userSubjects: []\r\n        }\r\n        this.toggleAssessment = this.toggleAssessment.bind(this);\r\n        this.handleAssessment = this.handleAssessment.bind(this);\r\n        this.fetchAssessmentData = this.fetchAssessmentData.bind(this);\r\n        this.toggleCompleteAssessments = this.toggleCompleteAssessments.bind(this);\r\n    }\r\n    toggleAssessment() {\r\n        var opp = !this.state.assessmentToggle;\r\n        this.setState({assessmentToggle: opp});\r\n    }\r\n\r\n    toggleCompleteAssessments() {\r\n        var opp = !this.state.completeAssessments;\r\n        this.setState({completeAssessments: opp});\r\n    }\r\n\r\n    async fetchAssessmentData() {\r\n        const responseGetAssessments = await fetch('/api/users/' + this.state.cookie.get('id') + '/assessments', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const bodyAssessments = await responseGetAssessments.json();\r\n        const assessmentsArray = [];\r\n        const completeAssessmentsArray = [];\r\n        var k;\r\n        for(k=0; k<bodyAssessments.length; k++) {\r\n            if(!bodyAssessments[k].isComplete) {\r\n                assessmentsArray.push(bodyAssessments[k]);\r\n            } else {\r\n                completeAssessmentsArray.push(bodyAssessments[k]);\r\n            }\r\n        }\r\n        this.setState({assessmentObjectArray: assessmentsArray});\r\n        this.setState({completeAssessmentObjectArray: completeAssessmentsArray});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const body = this.props.subjects; \r\n        var i;\r\n        var subjectArray = [];\r\n        for(i=0; i < body.length; i++) {\r\n            subjectArray.push(body[i].subject);\r\n        }\r\n        this.setState({subjects: subjectArray});\r\n        this.setState({userSubjects: body})\r\n\r\n        const response2 = await fetch('/api/assessments', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const body2 = await response2.json();\r\n        var j;\r\n        var assessmentTypesArray = [];\r\n        for(j=0; j < body2.length; j++) {\r\n            assessmentTypesArray.push(body2[j].name);\r\n        }\r\n        this.setState({assessmentTypes: assessmentTypesArray});\r\n        this.fetchAssessmentData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.subjects !== this.props.subjects) {\r\n            const body = this.props.subjects; \r\n            var i;\r\n            var subjectArray = [];\r\n            for(i=0; i < body.length; i++) {\r\n                subjectArray.push(body[i].subject);\r\n            }\r\n            this.setState({subjects: subjectArray});\r\n            this.setState({userSubjects: body})\r\n            console.log(this.state.userSubjects);\r\n        }\r\n    }\r\n\r\n    async handleAssessment(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        var subjectId;\r\n        var l;\r\n        for(l=0;l<this.state.userSubjects.length;l++) {\r\n            if(this.state.userSubjects[l].subject.name == data.get('userSubjects')) {\r\n                console.log(\"in\");\r\n                subjectId = this.state.userSubjects[l].id;\r\n            }\r\n        }\r\n        const data2 = {\r\n            assessmentTypeName: data.get('assessmentTypeName'),\r\n            date: data.get('date'),\r\n            priority: data.get('priority'),\r\n            totalPointsAvailable: data.get('totalPointsAvailable'),\r\n            userSubjectId: subjectId,\r\n            userId: this.state.cookie.get('id'),\r\n            isComplete: false\r\n        }\r\n        const response2 = await fetch('/api/users/' + this.state.cookie.get('id') + '/assessments', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }, \r\n            body: JSON.stringify(data2)\r\n        });\r\n        const body2 = await response2.json();\r\n        this.fetchAssessmentData();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={{height: \"100%\"}}>\r\n            <Card style={{height: \"100%\"}}>\r\n                <CardHeader style={{textAlign: \"center\", padding: \"10px\", backgroundColor: \"lightGray\"}}><h2>Assessments</h2></CardHeader>\r\n                <CardBody style={{overflowY: \"scroll\", backgroundColor: \"whiteSmoke\"}}>\r\n                    <Container fluid>\r\n                        {this.state.assessmentObjectArray.map(assessment => (<Row className=\"pb-2\"><AssessmentBlock \r\n                            color={this.state.userSubjects.find(element => element.id == assessment.userSubjectId).colorId} \r\n                            subject={`${this.state.userSubjects.find(element => element.id == assessment.userSubjectId).subject.name} ${assessment.assessmentTypeName}`} \r\n                            date={`${new Date(assessment.date).getMonth()+1}/${new Date(assessment.date).getDate()+1}`}\r\n                            dateFormat={new Date(assessment.date).toDateString('en-US')}\r\n                            complete={false} \r\n                            id={assessment.id} \r\n                            onUpdate={this.fetchAssessmentData} /></Row>))}\r\n                        <Button onClick={this.toggleCompleteAssessments} color=\"dark\" className=\"text-white mb-2 pt-0 pb-0 pl-1 pr-1\" style={{opacity: \"0.3\"}}>Completed</Button>\r\n                        <Collapse isOpen={this.state.completeAssessments}>\r\n                        {this.state.completeAssessmentObjectArray.map(completedAssessment => (<Row className=\"pb-2\"><AssessmentBlock \r\n                            color={this.state.userSubjects.find(element => element.id == completedAssessment.userSubjectId).colorId} \r\n                            subject={`${this.state.userSubjects.find(element => element.id == completedAssessment.userSubjectId).subject.name} ${completedAssessment.assessmentTypeName}`} \r\n                            date={`${new Date(completedAssessment.date).getMonth()+1}/${new Date(completedAssessment.date).getDate()+1}`}\r\n                            dateFormat={new Date(completedAssessment.date).toDateString('en-US')}\r\n                            complete={true} \r\n                            id={completedAssessment.id} \r\n                            onUpdate={this.fetchAssessmentData} /></Row>))}\r\n                        </Collapse>\r\n                    </Container>\r\n                </CardBody>\r\n                <CardFooter style={{backgroundColor: \"lightGray\"}}>\r\n                    <div style={{textAlign: \"center\", position: \"relative\"}}>\r\n                        <Button color=\"secondary\" onClick={this.toggleAssessment}>+ Add new Assessment</Button>\r\n                    </div>\r\n                </CardFooter>\r\n            </Card>\r\n            <Modal isOpen={this.state.assessmentToggle} toggle={this.toggleAssessment}>\r\n                <ModalHeader toggle={this.toggleAssessment}>Add an Assessment</ModalHeader>\r\n                <Form onSubmit={this.handleAssessment}>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for=\"userSubjects\">Subject</Label>\r\n                            <Input type=\"select\" name=\"userSubjects\" id=\"userSubjects\">\r\n                                <option> </option>\r\n                                {this.state.subjects.map(subject => (<option>{subject.name}</option>))}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"assessmentTypeName\">Assessment</Label>\r\n                            <Input type=\"select\" name=\"assessmentTypeName\" id=\"assessmentTypeName\">\r\n                                <option> </option>\r\n                                {this.state.assessmentTypes.map(assessmentType => (<option>{assessmentType}</option>))}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"totalPointsAvailable\">Total Points Available</Label>\r\n                            <Input type=\"number\" name=\"totalPointsAvailable\" id=\"totalPointsAvailable\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"priority\">Priority</Label>\r\n                            {/* <Input type=\"number\" name=\"priority\" id=\"priority\" /> */}\r\n                            <Input type=\"range\" min=\"0\" max=\"100\" name=\"priority\" id=\"priority\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"date\">Date</Label>\r\n                            <Input type=\"date\" name=\"date\" id=\"date\" />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" type=\"submit\" onClick={this.toggleAssessment}>Submit</Button>\r\n                        <Button color=\"secondary\" onClick={this.toggleAssessment}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(HomePageAssessments);",["92","93"],"C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\assessment-block\\AssessmentBlock.jsx",["94","95","96"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\nimport { Container, Col, Row, Button, Input } from 'reactstrap';\r\nimport classNames from 'classnames/bind';\r\nimport styles from'./AssessmentBlock.css';\r\nconst style = classNames.bind(styles);\r\n\r\nclass AssessmentBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            assessmentId: this.props.id,\r\n            textColor: \"\",\r\n            date: new Date().toDateString('en-US'),\r\n            daysToAssessment: 0\r\n        }\r\n        this.deleteAssessment = this.deleteAssessment.bind(this);\r\n        this.updateColor = this.updateColor.bind(this);\r\n    }\r\n\r\n    updateColor() {\r\n        if(this.props.color == \"bg-warning\") {\r\n            this.setState({textColor: \"dark\"});\r\n        } else {\r\n            this.setState({textColor: \"white\"});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateColor();\r\n        //resetting current date on mount\r\n        this.setState({date: new Date().toDateString('en-US')});\r\n        //calculations to find the difference between due date and current date\r\n        var currentDate = new Date(this.state.date);\r\n        var currentDateInt = Date.parse(currentDate); \r\n        var dueDateInt = Date.parse(this.props.dateFormat);\r\n        var diff = ((dueDateInt - currentDateInt)/86400000)+1;  //86400000 is ms in a day\r\n        this.setState({daysToAssessment: diff});\r\n    }\r\n\r\n    async deleteAssessment() {\r\n        await fetch('/api/users/' + this.state.assessmentId + '/assessments?isComplete=' + !this.props.complete, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        this.props.onUpdate();\r\n        this.updateColor();\r\n        //window.location.reload(false);    \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container fluid className=\"m-0 p-0 rounded border border-dark border-2\" style={{height: \"5vh\", display: \"inline-block\", backgroundColor: \"white\"}}>\r\n                <Row style={{height: \"100%\"}}>\r\n                    <Col md={2} className=\"p-0\" style={{/*backgroundColor: \"lightgray\", */textAlign: \"center\", top: \"1.5vh\"}}><Input type=\"radio\" onClick={this.deleteAssessment} style={{margin: \"0%\", transform: \"scale(2)\"}} className={style('checkButton')}/></Col>\r\n                    <Col md={8} className={this.props.color+\" m-0 text-\" + this.state.textColor} style={{/*padding: \"2.1%\",height: \"100%\",*/ textAlign: \"center\"}}><h5 className=\"p-0 m-0\" style={{transform: \"translateY(45%)\"}}>{this.props.subject}</h5></Col>\r\n                    <Col md={2.1} style={{textAlign: \"center\", position: \"relative\", top: \"1.2vh\", left: \"1.2vh\"/*paddingTop: \"2%\", paddingBottom: \"1.9%\" height: \"100%\"*/}} className=\"ml-2\"><h6>{this.props.date}</h6></Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(AssessmentBlock);","C:\\Users\\jv_ce\\Documents\\TSA Project\\skedu\\app\\src\\components\\subject\\Subject.jsx",["97"],{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":6,"column":5,"nodeType":"104","messageId":"105","endLine":8,"endColumn":6},{"ruleId":"98","severity":1,"message":"106","line":4,"column":21,"nodeType":"100","messageId":"101","endLine":4,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":12,"column":5,"nodeType":"104","messageId":"105","endLine":14,"endColumn":6},{"ruleId":"107","severity":1,"message":"108","line":27,"column":50,"nodeType":"109","messageId":"110","endLine":27,"endColumn":51},{"ruleId":"98","severity":1,"message":"111","line":40,"column":15,"nodeType":"100","messageId":"101","endLine":40,"endColumn":31},{"ruleId":"112","severity":1,"message":"113","line":17,"column":34,"nodeType":"114","messageId":"115","endLine":17,"endColumn":36},{"ruleId":"98","severity":1,"message":"116","line":32,"column":19,"nodeType":"100","messageId":"101","endLine":32,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":52,"column":42,"nodeType":"119","endLine":52,"endColumn":75},{"ruleId":"102","severity":1,"message":"103","line":6,"column":3,"nodeType":"104","messageId":"105","endLine":8,"endColumn":4},{"ruleId":"98","severity":1,"message":"120","line":3,"column":70,"nodeType":"100","messageId":"101","endLine":3,"endColumn":74},{"ruleId":"98","severity":1,"message":"121","line":3,"column":76,"nodeType":"100","messageId":"101","endLine":3,"endColumn":80},{"ruleId":"98","severity":1,"message":"122","line":3,"column":82,"nodeType":"100","messageId":"101","endLine":3,"endColumn":92},{"ruleId":"98","severity":1,"message":"123","line":3,"column":151,"nodeType":"100","messageId":"101","endLine":3,"endColumn":158},{"ruleId":"98","severity":1,"message":"124","line":3,"column":160,"nodeType":"100","messageId":"101","endLine":3,"endColumn":173},{"ruleId":"98","severity":1,"message":"125","line":3,"column":175,"nodeType":"100","messageId":"101","endLine":3,"endColumn":186},{"ruleId":"112","severity":1,"message":"126","line":41,"column":38,"nodeType":"114","messageId":"115","endLine":41,"endColumn":40},{"ruleId":"98","severity":1,"message":"127","line":69,"column":15,"nodeType":"100","messageId":"101","endLine":69,"endColumn":19},{"ruleId":"98","severity":1,"message":"128","line":94,"column":15,"nodeType":"100","messageId":"101","endLine":94,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":100,"column":13,"nodeType":"131","messageId":"115","endLine":100,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":105,"column":56,"nodeType":"114","messageId":"115","endLine":105,"endColumn":58},{"ruleId":"98","severity":1,"message":"132","line":127,"column":15,"nodeType":"100","messageId":"101","endLine":127,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":139,"column":87,"nodeType":"114","messageId":"115","endLine":139,"endColumn":89},{"ruleId":"112","severity":1,"message":"113","line":140,"column":92,"nodeType":"114","messageId":"115","endLine":140,"endColumn":94},{"ruleId":"112","severity":1,"message":"113","line":149,"column":87,"nodeType":"114","messageId":"115","endLine":149,"endColumn":89},{"ruleId":"112","severity":1,"message":"113","line":150,"column":92,"nodeType":"114","messageId":"115","endLine":150,"endColumn":94},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"98","severity":1,"message":"137","line":4,"column":31,"nodeType":"100","messageId":"101","endLine":4,"endColumn":37},{"ruleId":"112","severity":1,"message":"113","line":23,"column":29,"nodeType":"114","messageId":"115","endLine":23,"endColumn":31},{"ruleId":"102","severity":1,"message":"103","line":5,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":4},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Row' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'smallerContainer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'updateSignIn' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Card' is defined but never used.","'Fade' is defined but never used.","'InputGroup' is defined but never used.","'Popover' is defined but never used.","'PopoverHeader' is defined but never used.","'PopoverBody' is defined but never used.","Expected '!==' and instead saw '!='.","'data' is assigned a value but never used.","'fadeInStyle' is assigned a value but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","'body2' is assigned a value but never used.","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]