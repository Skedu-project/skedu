[{"c:\\Maria\\TSAProjects\\skedu\\app\\src\\index.js":"1","c:\\Maria\\TSAProjects\\skedu\\app\\src\\reportWebVitals.js":"2","c:\\Maria\\TSAProjects\\skedu\\app\\src\\App.js":"3","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\MainPage.jsx":"4","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\login-page\\LoginPage.jsx":"5","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\left-panel\\LeftPanel.jsx":"6","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\HomePage.jsx":"7","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\CreateAccount.jsx":"8","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\login-account\\LogInAccount.jsx":"9","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\left-panel\\AddSubject.jsx":"10","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\home-page-header\\HomePageHeader.jsx":"11","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\home-page-assessments\\HomePageAssessments.jsx":"12","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\subject-list\\SubjectList.jsx":"13","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\subject\\Subject.jsx":"14","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\assessment-block\\AssessmentBlock.jsx":"15","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\time-block\\TimeBlock.jsx":"16"},{"size":565,"mtime":1609446355978,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1609446355979,"results":"19","hashOfConfig":"18"},{"size":903,"mtime":1610412384781,"results":"20","hashOfConfig":"18"},{"size":651,"mtime":1610061856792,"results":"21","hashOfConfig":"18"},{"size":1366,"mtime":1610061856799,"results":"22","hashOfConfig":"18"},{"size":2508,"mtime":1610414093828,"results":"23","hashOfConfig":"18"},{"size":3028,"mtime":1610419407700,"results":"24","hashOfConfig":"18"},{"size":3140,"mtime":1610213129342,"results":"25","hashOfConfig":"18"},{"size":3248,"mtime":1610213129348,"results":"26","hashOfConfig":"18"},{"size":3483,"mtime":1610414093827,"results":"27","hashOfConfig":"18"},{"size":7718,"mtime":1610414093826,"results":"28","hashOfConfig":"18"},{"size":10342,"mtime":1610414093825,"results":"29","hashOfConfig":"18"},{"size":595,"mtime":1610414093829,"results":"30","hashOfConfig":"18"},{"size":836,"mtime":1610414093830,"results":"31","hashOfConfig":"18"},{"size":3139,"mtime":1610414093824,"results":"32","hashOfConfig":"18"},{"size":1954,"mtime":1610420861274,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"etr4g0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"36"},"c:\\Maria\\TSAProjects\\skedu\\app\\src\\index.js",[],["79","80"],"c:\\Maria\\TSAProjects\\skedu\\app\\src\\reportWebVitals.js",[],"c:\\Maria\\TSAProjects\\skedu\\app\\src\\App.js",[],"c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\MainPage.jsx",["81","82"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const cookies = this.props.cookies;\r\n        const emailCookie = cookies.get('email');\r\n        if(emailCookie) {\r\n            // go to home page\r\n            this.props.history.push('/home');\r\n        } else {\r\n            //go to login page\r\n            this.props.history.push('/login');\r\n        }\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(MainPage);","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\login-page\\LoginPage.jsx",["83","84","85"],"import React from 'react'; \r\nimport LoginAccount from '../login-account/LogInAccount';\r\nimport CreateAccount from '../CreateAccount'; \r\nimport { Container, Row, Col } from 'reactstrap'; \r\nimport classNames from 'classnames/bind'; \r\nimport styles from './LoginPage.css'; \r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        // const backStyle = {\r\n        //     backgroundImage: \"url(https://wallpaperaccess.com/full/1236480.jpg)\", \r\n        //     backgroundPosition: 'center',\r\n        //     backgroundSize: 'cover',\r\n        //     backgroundRepeat: 'no-repeat'\r\n        // };\r\n\r\n        return(\r\n        <div style={{height: window.innerHeight}}>\r\n            <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                <Container className={\"container\", cx('ca')}> \r\n                    <div className=\"row m-0\">\r\n                        <Col className=\"col-5 m-0 p-0\"><div><LoginAccount /></div></Col>\r\n                        <Col className=\"col m-0 p-0\"><div className={cx('hehe')} style={{backgroundColor:\"lightgray\", padding: \"30px\"}}><CreateAccount /></div></Col>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage; ","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\left-panel\\LeftPanel.jsx",[],"c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\HomePage.jsx",["86"],"import React from 'react';\r\nimport { withCookies } from 'react-cookie';\r\nimport { Container, Col, Row } from 'reactstrap'; \r\nimport HomePageHeader from './home-page-header/HomePageHeader';\r\nimport HomePageAssessments from './home-page-assessments/HomePageAssessments';\r\nimport LeftPanel from './left-panel/LeftPanel'; \r\nimport TimeBlock from './time-block/TimeBlock'\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subjects: []\r\n        };\r\n        this.getSubjects = this.getSubjects.bind(this); \r\n    }\r\n\r\n    async getSubjects() {\r\n        const response = await fetch('/api/users/ ' + this.props.cookies.get('id') + '/subjects', { //connecting to api \r\n          method: 'GET',\r\n          headers: {\r\n              'Accept': 'application/json',  //receiving data in JSON format in browser\r\n              'Content-Type': 'application/json'  //sending data in JSON format\r\n          }\r\n        });\r\n    \r\n        const body = await response.json();\r\n        this.setState({subjects: body}); //subjects has users subjects\r\n    }\r\n\r\n    async componentWillMount(){\r\n        this.getSubjects();\r\n    }\r\n      \r\n    render() {\r\n        const cookie = this.props.cookies;\r\n        if (!cookie.get('email')) {\r\n            this.props.history.push('/');\r\n            return null;\r\n        }\r\n        const smallerContainer = {\r\n            height: \"86vh\",\r\n           /* width: (window.innerWidth-30),*/\r\n            position: \"relative\"\r\n        };\r\n        const largeContainer = {\r\n            height: \"99vh\",\r\n            width: \"99vw\",\r\n            position: \"relative\",\r\n        };\r\n        return(\r\n            <Container fluid className=\"m-0\" style={largeContainer}>\r\n                <Row style={largeContainer}>\r\n                    <Col id=\"subject nav bar\" className=\"p-1\" md={2} /*style={{backgroundColor: \"whiteSmoke\"}}*/>\r\n                        <LeftPanel subjects={this.state.subjects} refresh={this.getSubjects}/>\r\n                    </Col>\r\n                    <Col id=\"right\" className=\"p-1\">\r\n                        <Container fluid style={{position: \"relative\", height: \"100%\"}} className=\"m-0 p-0\">\r\n                            <Row style={{height: \"12%\", position: \"relative\"}}><Col id=\"header\"><HomePageHeader /></Col></Row>\r\n                            <Row fluid className=\"m-0\" id=\"bot_right\" style={{height: \"88%\", position: \"relative\"}}>\r\n                                <Col id=\"HW time\" md={8}>\r\n                                    <Container>\r\n                                        <TimeBlock />\r\n                                    </Container>\r\n                                </Col>\r\n                                <Col className=\"p-0\"><HomePageAssessments subjects={this.state.subjects}/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(HomePage);","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\CreateAccount.jsx",["87"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass CreateAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);  //Not Object File type\r\n        const cookie = this.props.cookies;\r\n        cookie.set('email', data.get('email'));\r\n        if (data.get('password') == data.get('verifyPassword')) {\r\n            const data2 = {\r\n                firstName: data.get('firstName'),\r\n                lastName: data.get('lastName'),\r\n                email: data.get('email'),\r\n                password: data.get('password')\r\n            }\r\n            //const value = Object.fromEntries(data2.entries());  //converts form file type into Object\r\n            const response = await fetch('/api/users', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                    'Content-Type': 'application/json'  //sending data in JSON format\r\n                },\r\n                body: JSON.stringify(data2)\r\n            });\r\n            const body = await response.json();\r\n            cookie.set('id', body.id);\r\n        }\r\n        else {\r\n            alert(\"passwords do not match\");\r\n        }\r\n        this.props.history.push('/home');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <h2 style={{textAlign: \"center\"}}>Create Account</h2>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"fName\">First Name</Label>\r\n                        <Input type=\"text\" name=\"firstName\" id=\"fName\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"lName\">Last Name</Label>\r\n                        <Input type=\"text\" name=\"lastName\" id=\"lName\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"email\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\">Password</Label>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"verifyPassword\">Verify Password</Label>\r\n                        <Input type=\"password\" name=\"verifyPassword\" id=\"verifyPassword\"/>\r\n                    </FormGroup>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Button color=\"primary\" type=\"submit\">Sign Up</Button>\r\n                    </div>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withCookies(CreateAccount));","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\login-account\\LogInAccount.jsx",["88","89"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { withCookies } from 'react-cookie';\r\nimport classNames from 'classnames/bind';\r\nimport styles from'./LogInAccount.css';\r\nconst cx = classNames.bind(styles);\r\n\r\nclass LogInAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {isSignInSuccessful: false};\r\n    }\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const response = await fetch('/api/verifyUser?email=' + data.get('email') + '&password=' + data.get('password'), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const body = await response.json();\r\n        if(body != null) {\r\n            this.setState({isSignInSuccessful: true});\r\n        } else {\r\n            this.setState({isSignInSuccessful: false});\r\n        }\r\n        if (this.state.isSignInSuccessful) {\r\n            const updateSignIn = await fetch('/api/userIsSignedIn?email=' + data.get('email') + '&signIn=true', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                    'Content-Type': 'application/json'  //sending data in JSON format\r\n                }\r\n            });\r\n            const cookie = this.props.cookies;\r\n            cookie.set('email', data.get('email'));\r\n            console.log(body);\r\n            cookie.set('id', body.id);\r\n            this.props.history.push('/home');\r\n        } else {\r\n            alert(\"Sign in credentials did not match, please try again.\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container /*className=\"page-hero d-flex align-items-center justify-content-center\"*/ className=\"m-0 p-0\" /*style={{width:\"400px\"}}*/>\r\n                <div className=\"m-0 p-0\" className={cx('logInbackground')}>\r\n                    <h2 style={{color: \"white\", textAlign: \"center\"}}>Welcome Back!</h2>\r\n                    <div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\"/>\r\n                        </FormGroup>\r\n                        <div style={{textAlign: \"center\"}}>\r\n                            <Button color=\"light\" type=\"submit\">Sign In</Button>\r\n                        </div>\r\n                    </Form>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(withRouter(LogInAccount));","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\left-panel\\AddSubject.jsx",[],"c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\home-page-header\\HomePageHeader.jsx",["90","91","92","93","94","95","96","97","98","99"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Container, Row, Col, Form, FormGroup, Input, Label, Card, Fade, InputGroup, Modal, ModalHeader, ModalBody, ModalFooter, ButtonGroup, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass HomePageHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date().toDateString('en-US'),\r\n            time: new Date().toLocaleTimeString('en-US'),\r\n            fadeIn: false,\r\n            totalTime: 0,\r\n            popUp: true,\r\n            userGradeLevel: 0,\r\n            cookie: this.props.cookies\r\n        };\r\n        this.switchFadeInState = this.switchFadeInState.bind(this);\r\n        this.handleTotalTime = this.handleTotalTime.bind(this);\r\n        this.handleSignOut = this.handleSignOut.bind(this); \r\n    }\r\n    changeDate() {\r\n        this.setState({date: new Date().toDateString('en-US')});\r\n    }\r\n    changeTime() {\r\n        this.setState({time: new Date().toLocaleTimeString('en-US')});\r\n    }\r\n    async componentWillMount() {\r\n        setInterval(this.changeDate.bind(this), 60000);\r\n        setInterval(this.changeTime.bind(this), 1000);\r\n        const response = await fetch('/api/usersByEmail?email=' + this.state.cookie.get('email') + '&totalTime=', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const body = await response.json();\r\n        this.setState({totalTime: body.totalTime});\r\n        this.setState({userGradeLevel: body.currentGradeLevel});\r\n        if(this.state.userGradeLevel != 0) {\r\n            this.setState({popUp: false});\r\n        } else {\r\n            this.setState({popUp: true}); \r\n        }\r\n    }\r\n       \r\n    switchFadeInState() {\r\n        var opp = !this.state.fadeIn;\r\n        this.setState({fadeIn: opp});\r\n    }\r\n\r\n    async handleTotalTime(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const response = await fetch('/api/userTotalTime?email=' + this.state.cookie.get('email') + '&totalTime=' + data.get('totalTime'), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const body = await response.json();\r\n        this.setState({totalTime: body});\r\n        this.setState({fadeIn: false});\r\n    }\r\n    async handleSignOut(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        console.log(this.state.cookie.get('email'));\r\n        const response = await fetch('/api/userIsSignedIn?email=' + this.state.cookie.get('email') + '&signIn=false', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const body = await response.json();\r\n        if(!body) {\r\n            this.state.cookie.remove('email');\r\n            this.props.history.push('/');\r\n        } else {\r\n            alert(\"There is something wrong with the Sign out.\")\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const headerStyle = {\r\n            backgroundColor: \"#B8B8B8\",\r\n            padding: \"0%\"\r\n            /*width: \"1000px\"*/\r\n        }\r\n        const fadeInStyle = {\r\n            backgroundColor: \"rgb(91, 192, 222, 0.8)\",\r\n            padding: \"15px\",\r\n            width: \"200px\",\r\n            height: \"100px\",\r\n            borderRadius: \"5%\",\r\n            padding: \"5%\",\r\n            textAlign: \"center\",\r\n        }\r\n        return(\r\n            <Container fluid className=\"m-0 p-0\">\r\n                <div className=\"container-fluid m-2\">\r\n                <Row style={headerStyle} className=\"rounded-lg\">\r\n                    <Col className=\"container m-0\" md={10} /*style={{width: \"650px\"}}*/>\r\n                        <h1>My Planner</h1>\r\n                        <Row>\r\n                            <h4 className=\"col-8 m-0 pr-0\">{this.state.date} | MP 2 | {this.state.time}</h4>  {/*marking Period is hard coded*/}\r\n                            <Button color=\"primary\" onClick={this.switchFadeInState} className=\"col-3. m-0\"><h6>Study Time Today: {this.state.totalTime}</h6></Button>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className=\"row p-0\" md={2}>\r\n                        <div className=\"col-3\"></div>\r\n                        <div className=\"h-100 col-5 p-0\" style={{textAlign: \"center\"}} id=\"profilePopover\">\r\n                        <ButtonGroup>\r\n                            <ButtonGroup vertical id=\"profilePopover\">\r\n                                {/* <Button type=\"submit\" className=\"mt-1\" color=\"secondary\" style={{width: \"100%\", height: \"46.48%\", borderRadius: \"0px\", borderTopLeftRadius: \"10%\"}}><h6>Profile</h6></Button>\r\n                                <Button type=\"submit\" color=\"secondary\" style={{width: \"100%\", height: \"46.48%\", borderRadius: \"0px\", borderBottomLeftRadius: \"10%\"}}><h6>Settings</h6></Button> */}\r\n                                <Button type=\"button\" id=\"profilePopover\" color=\"secondary\" style={{height: \"93%\", width: \"100%\"}}><h6>Profile</h6></Button>\r\n                                {/* <Popover placement=\"bottom\" isOpen={this.state.popUp} target=\"profilePopover\">\r\n                                    <PopoverHeader>Update Profile</PopoverHeader>\r\n                                    <PopoverBody>Your profile is not complete.</PopoverBody>\r\n                                </Popover> */}\r\n                                <Button type=\"button\" color=\"dark\" style={{height: \"93%\", width: \"100%\"}}><h6>Setting</h6></Button>\r\n                            </ButtonGroup>\r\n                            <Form onSubmit={this.handleSignOut} className=\"col-3 p-0\" style={{textAlign: \"center\"}}>\r\n                                <Button type=\"submit\" color=\"danger\" className=\"p-1\" style={{width: \"175%\", height: \"100%\"}}><h6>Sign Out</h6></Button>\r\n                            </Form>\r\n                        </ButtonGroup>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                    <Modal isOpen={this.state.fadeIn} toggle={this.switchFadeInState}>\r\n                        <ModalHeader toggle={this.switchFadeInState}>How much time do you want to study today?</ModalHeader>\r\n                        <Form onSubmit={this.handleTotalTime}>\r\n                            <ModalBody>\r\n                                <FormGroup>\r\n                                    <Label for=\"totalTime\">Homework Time Today</Label>\r\n                                    <Input type=\"number\" name=\"totalTime\" id=\"totalTime\"/>\r\n                                </FormGroup>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"primary\" type=\"submit\" onClick={this.switchFadeInState}>Submit</Button>\r\n                                <Button color=\"secondary\" onClick={this.switchFadeInState}>Cancel</Button>\r\n                            </ModalFooter>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(withRouter(HomePageHeader));","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\home-page-assessments\\HomePageAssessments.jsx",["100","101","102","103","104","105","106"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\nimport { Container, Row, Button, Card, CardBody, CardFooter, CardHeader, Modal, ModalBody, ModalHeader, ModalFooter, Form, FormGroup, Label, Input, Collapse } from 'reactstrap';\r\nimport AssessmentBlock from '../assessment-block/AssessmentBlock';\r\n\r\nclass HomePageAssessments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            assessmentToggle: false,\r\n            completeAssessments: false,\r\n            cookie: this.props.cookies,\r\n            subjects: [],\r\n            assessmentTypes: [],\r\n            assessmentObjectArray: [],\r\n            completeAssessmentObjectArray: [],\r\n            userSubjects: []\r\n        }\r\n        this.toggleAssessment = this.toggleAssessment.bind(this);\r\n        this.handleAssessment = this.handleAssessment.bind(this);\r\n        this.fetchAssessmentData = this.fetchAssessmentData.bind(this);\r\n        this.toggleCompleteAssessments = this.toggleCompleteAssessments.bind(this);\r\n    }\r\n    toggleAssessment() {\r\n        var opp = !this.state.assessmentToggle;\r\n        this.setState({assessmentToggle: opp});\r\n    }\r\n\r\n    toggleCompleteAssessments() {\r\n        var opp = !this.state.completeAssessments;\r\n        this.setState({completeAssessments: opp});\r\n    }\r\n\r\n    async fetchAssessmentData() {\r\n        const responseGetAssessments = await fetch('/api/users/' + this.state.cookie.get('id') + '/assessments', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const bodyAssessments = await responseGetAssessments.json();\r\n        const assessmentsArray = [];\r\n        const completeAssessmentsArray = [];\r\n        var k;\r\n        for(k=0; k<bodyAssessments.length; k++) {\r\n            if(!bodyAssessments[k].isComplete) {\r\n                assessmentsArray.push(bodyAssessments[k]);\r\n            } else {\r\n                completeAssessmentsArray.push(bodyAssessments[k]);\r\n            }\r\n        }\r\n        this.setState({assessmentObjectArray: assessmentsArray});\r\n        this.setState({completeAssessmentObjectArray: completeAssessmentsArray});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const body = this.props.subjects; \r\n        var i;\r\n        var subjectArray = [];\r\n        for(i=0; i < body.length; i++) {\r\n            subjectArray.push(body[i].subject);\r\n        }\r\n        this.setState({subjects: subjectArray});\r\n        this.setState({userSubjects: body})\r\n\r\n        const response2 = await fetch('/api/assessments', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        const body2 = await response2.json();\r\n        var j;\r\n        var assessmentTypesArray = [];\r\n        for(j=0; j < body2.length; j++) {\r\n            assessmentTypesArray.push(body2[j].name);\r\n        }\r\n        this.setState({assessmentTypes: assessmentTypesArray});\r\n        this.fetchAssessmentData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.subjects !== this.props.subjects) {\r\n            const body = this.props.subjects; \r\n            var i;\r\n            var subjectArray = [];\r\n            for(i=0; i < body.length; i++) {\r\n                subjectArray.push(body[i].subject);\r\n            }\r\n            this.setState({subjects: subjectArray});\r\n            this.setState({userSubjects: body})\r\n            console.log(this.state.userSubjects);\r\n        }\r\n    }\r\n\r\n    async handleAssessment(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        var subjectId;\r\n        var l;\r\n        for(l=0;l<this.state.userSubjects.length;l++) {\r\n            if(this.state.userSubjects[l].subject.name == data.get('userSubjects')) {\r\n                console.log(\"in\");\r\n                subjectId = this.state.userSubjects[l].id;\r\n            }\r\n        }\r\n        const data2 = {\r\n            assessmentTypeName: data.get('assessmentTypeName'),\r\n            date: data.get('date'),\r\n            priority: data.get('priority'),\r\n            totalPointsAvailable: data.get('totalPointsAvailable'),\r\n            userSubjectId: subjectId,\r\n            userId: this.state.cookie.get('id'),\r\n            isComplete: false\r\n        }\r\n        const response2 = await fetch('/api/users/' + this.state.cookie.get('id') + '/assessments', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }, \r\n            body: JSON.stringify(data2)\r\n        });\r\n        const body2 = await response2.json();\r\n        this.fetchAssessmentData();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={{height: \"100%\"}}>\r\n            <Card style={{height: \"100%\"}}>\r\n                <CardHeader style={{textAlign: \"center\", padding: \"10px\", backgroundColor: \"lightGray\"}}><h2>Assessments</h2></CardHeader>\r\n                <CardBody style={{overflowY: \"scroll\", backgroundColor: \"whiteSmoke\"}}>\r\n                    <Container fluid>\r\n                        {this.state.assessmentObjectArray.map(assessment => (<Row className=\"pb-2\"><AssessmentBlock \r\n                            color={this.state.userSubjects.find(element => element.id == assessment.userSubjectId).colorId} \r\n                            subject={`${this.state.userSubjects.find(element => element.id == assessment.userSubjectId).subject.name} ${assessment.assessmentTypeName}`} \r\n                            date={`${new Date(assessment.date).getMonth()+1}/${new Date(assessment.date).getDate()+1}`}\r\n                            dateFormat={new Date(assessment.date).toDateString('en-US')}\r\n                            complete={false} \r\n                            id={assessment.id} \r\n                            onUpdate={this.fetchAssessmentData} /></Row>))}\r\n                        <Button onClick={this.toggleCompleteAssessments} color=\"dark\" className=\"text-white mb-2 pt-0 pb-0 pl-1 pr-1\" style={{opacity: \"0.3\"}}>Completed</Button>\r\n                        <Collapse isOpen={this.state.completeAssessments}>\r\n                        {this.state.completeAssessmentObjectArray.map(completedAssessment => (<Row className=\"pb-2\"><AssessmentBlock \r\n                            color={this.state.userSubjects.find(element => element.id == completedAssessment.userSubjectId).colorId} \r\n                            subject={`${this.state.userSubjects.find(element => element.id == completedAssessment.userSubjectId).subject.name} ${completedAssessment.assessmentTypeName}`} \r\n                            date={`${new Date(completedAssessment.date).getMonth()+1}/${new Date(completedAssessment.date).getDate()+1}`}\r\n                            dateFormat={new Date(completedAssessment.date).toDateString('en-US')}\r\n                            complete={true} \r\n                            id={completedAssessment.id} \r\n                            onUpdate={this.fetchAssessmentData} /></Row>))}\r\n                        </Collapse>\r\n                    </Container>\r\n                </CardBody>\r\n                <CardFooter style={{backgroundColor: \"lightGray\"}}>\r\n                    <div style={{textAlign: \"center\", position: \"relative\"}}>\r\n                        <Button color=\"secondary\" onClick={this.toggleAssessment}>+ Add new Assessment</Button>\r\n                    </div>\r\n                </CardFooter>\r\n            </Card>\r\n            <Modal isOpen={this.state.assessmentToggle} toggle={this.toggleAssessment}>\r\n                <ModalHeader toggle={this.toggleAssessment}>Add an Assessment</ModalHeader>\r\n                <Form onSubmit={this.handleAssessment}>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for=\"userSubjects\">Subject</Label>\r\n                            <Input type=\"select\" name=\"userSubjects\" id=\"userSubjects\">\r\n                                <option> </option>\r\n                                {this.state.subjects.map(subject => (<option>{subject.name}</option>))}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"assessmentTypeName\">Assessment</Label>\r\n                            <Input type=\"select\" name=\"assessmentTypeName\" id=\"assessmentTypeName\">\r\n                                <option> </option>\r\n                                {this.state.assessmentTypes.map(assessmentType => (<option>{assessmentType}</option>))}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"totalPointsAvailable\">Total Points Available</Label>\r\n                            <Input type=\"number\" name=\"totalPointsAvailable\" id=\"totalPointsAvailable\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"priority\">Priority</Label>\r\n                            {/* <Input type=\"number\" name=\"priority\" id=\"priority\" /> */}\r\n                            <Input type=\"range\" min=\"0\" max=\"100\" name=\"priority\" id=\"priority\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"date\">Date</Label>\r\n                            <Input type=\"date\" name=\"date\" id=\"date\" />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" type=\"submit\" onClick={this.toggleAssessment}>Submit</Button>\r\n                        <Button color=\"secondary\" onClick={this.toggleAssessment}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(HomePageAssessments);","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\subject-list\\SubjectList.jsx",["107"],"import React from 'react';\r\nimport { Container } from 'reactstrap'; \r\nimport Subject from '../subject/Subject';\r\n\r\nclass SubjectList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const subjects = this.props.subjects;\r\n    return (\r\n      <Container className=\"p-0\">{\r\n        (subjects && subjects.length > 0) && (subjects.map(subjectItem => (\r\n          <Subject color={subjectItem.colorId} name={subjectItem.subject.name} goalGrade={subjectItem.goalGrade} />\r\n        )))\r\n      }\r\n    </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SubjectList;","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\subject\\Subject.jsx",["108"],"import React from 'react';\r\nimport { Row, Col, Container } from 'reactstrap'; \r\n\r\nclass Subject extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container style={{marginBottom: \"10px\", backgroundColor: \"whiteSmoke\"}}>\r\n        <Row style={{border: '1px solid', borderRadius: '7px', height: \"8vh\"}}>\r\n            <Col xs=\"1\" className={this.props.color} style={{ /*width:'20px',*/ borderTopLeftRadius: '7px', borderBottomLeftRadius: '7px'}} />\r\n            <Col xs=\"9\" style={{textAlign: 'center'}}>\r\n                <h5>{this.props.name}</h5>\r\n                <div style={{borderRadius: \"2px\", backgroundColor: \"lightGray\"}}><h6 style={{}}>{this.props.goalGrade}%</h6></div>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Subject; ","c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\assessment-block\\AssessmentBlock.jsx",["109","110","111"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\nimport { Container, Col, Row, Button, Input } from 'reactstrap';\r\nimport classNames from 'classnames/bind';\r\nimport styles from'./AssessmentBlock.css';\r\nconst style = classNames.bind(styles);\r\n\r\nclass AssessmentBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            assessmentId: this.props.id,\r\n            textColor: \"\",\r\n            date: new Date().toDateString('en-US'),\r\n            daysToAssessment: 0\r\n        }\r\n        this.deleteAssessment = this.deleteAssessment.bind(this);\r\n        this.updateColor = this.updateColor.bind(this);\r\n    }\r\n\r\n    updateColor() {\r\n        if(this.props.color == \"bg-warning\") {\r\n            this.setState({textColor: \"dark\"});\r\n        } else {\r\n            this.setState({textColor: \"white\"});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateColor();\r\n        //resetting current date on mount\r\n        this.setState({date: new Date().toDateString('en-US')});\r\n        //calculations to find the difference between due date and current date\r\n        var currentDate = new Date(this.state.date);\r\n        var currentDateInt = Date.parse(currentDate); \r\n        var dueDateInt = Date.parse(this.props.dateFormat);\r\n        var diff = ((dueDateInt - currentDateInt)/86400000)+1;  //86400000 is ms in a day\r\n        this.setState({daysToAssessment: diff});\r\n    }\r\n\r\n    async deleteAssessment() {\r\n        await fetch('/api/users/' + this.state.assessmentId + '/assessments?isComplete=' + !this.props.complete, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',  //receiving data in JSON format in browser\r\n                'Content-Type': 'application/json'  //sending data in JSON format\r\n            }\r\n        });\r\n        this.props.onUpdate();\r\n        this.updateColor();\r\n        //window.location.reload(false);    \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container fluid className=\"m-0 p-0 rounded border border-dark border-2\" style={{height: \"5vh\", display: \"inline-block\", backgroundColor: \"white\"}}>\r\n                <Row style={{height: \"100%\"}}>\r\n                    <Col md={2} className=\"p-0\" style={{/*backgroundColor: \"lightgray\", */textAlign: \"center\", top: \"1.5vh\"}}><Input type=\"radio\" onClick={this.deleteAssessment} style={{margin: \"0%\", transform: \"scale(2)\"}} className={style('checkButton')}/></Col>\r\n                    <Col md={8} className={this.props.color+\" m-0 text-\" + this.state.textColor} style={{/*padding: \"2.1%\",height: \"100%\",*/ textAlign: \"center\"}}><h5 className=\"p-0 m-0\" style={{transform: \"translateY(45%)\"}}>{this.props.subject}</h5></Col>\r\n                    <Col md={2.1} style={{textAlign: \"center\", position: \"relative\", top: \"1.2vh\", left: \"1.2vh\"/*paddingTop: \"2%\", paddingBottom: \"1.9%\" height: \"100%\"*/}} className=\"ml-2\"><h6>{this.props.date}</h6></Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(AssessmentBlock);",["112","113"],"c:\\Maria\\TSAProjects\\skedu\\app\\src\\components\\time-block\\TimeBlock.jsx",["114","115","116"],"import React from 'react';\r\nimport { Row, Col, Container, Input } from 'reactstrap'; \r\nimport classNames from 'classnames/bind';\r\nimport styles from'./TimeBlock.css';\r\n// const style = classNames.bind(styles);\r\n\r\nclass TimeBlock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <Container style={{marginBottom: \"10px\", backgroundColor: \"whiteSmoke\"}}>\r\n      //   <Row style={{border: '1px solid', borderRadius: '7px', height: \"8vh\"}}>\r\n      //       <Col xs=\"1\" className={this.props.color} style={{ /*width:'20px',*/ borderTopLeftRadius: '7px', borderBottomLeftRadius: '7px'}} />\r\n      //       <Col xs=\"9\" style={{textAlign: 'center'}}>\r\n      //           <h5>{this.props.name}</h5>\r\n      //           <div style={{borderRadius: \"2px\", backgroundColor: \"lightGray\"}}><h6 style={{}}>{this.props.goalGrade}%</h6></div>\r\n      //       </Col>\r\n      //   </Row>\r\n      // </Container>\r\n      <Container className=\"m-0 rounded border border-dark border-2\" style={{backgroundColor: \"lightGray\"}}>\r\n        <Row style={{height: \"100%\"}}>\r\n          <Col xs={1} className=\"p-0\" style={{/*backgroundColor: \"lightgray\", */textAlign: \"center\"}}>\r\n            <Input type=\"radio\" style={{margin: \"0%\", transform: \"scale(2)\", padding: '10px', verticalAlign: 'middle', height: '100%'}}/>\r\n          </Col>\r\n          <Col xs={7} className=\"p-0\" style={{height: \"100%\", textAlign: \"center\"}}>\r\n            <div>\r\n              <h4 className=\"p-3 m-0 text-white bg-info\">Math</h4>\r\n            </div>\r\n          </Col>\r\n          <Col xs={2} className=\"p-3 border-right border-dark\" style={{textAlign: \"center\"}}>\r\n            <h5 className=\"p-0 m-0\">20%</h5>\r\n          </Col>\r\n          <Col xs={2} className=\"p-3\" style={{textAlign: \"center\"}}>\r\n            <h5 className=\"p-0 m-0\">20 min</h5>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeBlock; \r\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":6,"column":5,"nodeType":"127","messageId":"128","endLine":8,"endColumn":6},{"ruleId":"121","severity":1,"message":"129","line":4,"column":21,"nodeType":"123","messageId":"124","endLine":4,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":12,"column":5,"nodeType":"127","messageId":"128","endLine":14,"endColumn":6},{"ruleId":"130","severity":1,"message":"131","line":27,"column":50,"nodeType":"132","messageId":"133","endLine":27,"endColumn":51},{"ruleId":"121","severity":1,"message":"134","line":41,"column":15,"nodeType":"123","messageId":"124","endLine":41,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":17,"column":34,"nodeType":"137","messageId":"138","endLine":17,"endColumn":36},{"ruleId":"121","severity":1,"message":"139","line":32,"column":19,"nodeType":"123","messageId":"124","endLine":32,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":52,"column":42,"nodeType":"142","endLine":52,"endColumn":75},{"ruleId":"121","severity":1,"message":"143","line":3,"column":70,"nodeType":"123","messageId":"124","endLine":3,"endColumn":74},{"ruleId":"121","severity":1,"message":"144","line":3,"column":76,"nodeType":"123","messageId":"124","endLine":3,"endColumn":80},{"ruleId":"121","severity":1,"message":"145","line":3,"column":82,"nodeType":"123","messageId":"124","endLine":3,"endColumn":92},{"ruleId":"121","severity":1,"message":"146","line":3,"column":151,"nodeType":"123","messageId":"124","endLine":3,"endColumn":158},{"ruleId":"121","severity":1,"message":"147","line":3,"column":160,"nodeType":"123","messageId":"124","endLine":3,"endColumn":173},{"ruleId":"121","severity":1,"message":"148","line":3,"column":175,"nodeType":"123","messageId":"124","endLine":3,"endColumn":186},{"ruleId":"135","severity":1,"message":"149","line":41,"column":38,"nodeType":"137","messageId":"138","endLine":41,"endColumn":40},{"ruleId":"121","severity":1,"message":"150","line":69,"column":15,"nodeType":"123","messageId":"124","endLine":69,"endColumn":19},{"ruleId":"121","severity":1,"message":"151","line":94,"column":15,"nodeType":"123","messageId":"124","endLine":94,"endColumn":26},{"ruleId":"152","severity":1,"message":"153","line":100,"column":13,"nodeType":"154","messageId":"138","endLine":100,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":105,"column":56,"nodeType":"137","messageId":"138","endLine":105,"endColumn":58},{"ruleId":"121","severity":1,"message":"155","line":127,"column":15,"nodeType":"123","messageId":"124","endLine":127,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":139,"column":87,"nodeType":"137","messageId":"138","endLine":139,"endColumn":89},{"ruleId":"135","severity":1,"message":"136","line":140,"column":92,"nodeType":"137","messageId":"138","endLine":140,"endColumn":94},{"ruleId":"135","severity":1,"message":"136","line":149,"column":87,"nodeType":"137","messageId":"138","endLine":149,"endColumn":89},{"ruleId":"135","severity":1,"message":"136","line":150,"column":92,"nodeType":"137","messageId":"138","endLine":150,"endColumn":94},{"ruleId":"125","severity":1,"message":"126","line":6,"column":3,"nodeType":"127","messageId":"128","endLine":8,"endColumn":4},{"ruleId":"125","severity":1,"message":"126","line":5,"column":3,"nodeType":"127","messageId":"128","endLine":7,"endColumn":4},{"ruleId":"121","severity":1,"message":"122","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":20},{"ruleId":"121","severity":1,"message":"156","line":4,"column":31,"nodeType":"123","messageId":"124","endLine":4,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":23,"column":29,"nodeType":"137","messageId":"138","endLine":23,"endColumn":31},{"ruleId":"117","replacedBy":"157"},{"ruleId":"119","replacedBy":"158"},{"ruleId":"121","severity":1,"message":"159","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":18},{"ruleId":"121","severity":1,"message":"160","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":8,"column":3,"nodeType":"127","messageId":"128","endLine":10,"endColumn":4},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Row' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'smallerContainer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'updateSignIn' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Card' is defined but never used.","'Fade' is defined but never used.","'InputGroup' is defined but never used.","'Popover' is defined but never used.","'PopoverHeader' is defined but never used.","'PopoverBody' is defined but never used.","Expected '!==' and instead saw '!='.","'data' is assigned a value but never used.","'fadeInStyle' is assigned a value but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","'body2' is assigned a value but never used.","'Button' is defined but never used.",["161"],["162"],"'classNames' is defined but never used.","'styles' is defined but never used.","no-global-assign","no-unsafe-negation"]